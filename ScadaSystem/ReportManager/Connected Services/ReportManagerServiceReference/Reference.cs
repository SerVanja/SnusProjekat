//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ReportManager.ReportManagerServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AlarmLog", Namespace="http://schemas.datacontract.org/2004/07/ScadaSystem")]
    [System.SerializableAttribute()]
    public partial class AlarmLog : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AlarmIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CurrentValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PriorityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TagNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeStampField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AlarmId {
            get {
                return this.AlarmIdField;
            }
            set {
                if ((this.AlarmIdField.Equals(value) != true)) {
                    this.AlarmIdField = value;
                    this.RaisePropertyChanged("AlarmId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CurrentValue {
            get {
                return this.CurrentValueField;
            }
            set {
                if ((this.CurrentValueField.Equals(value) != true)) {
                    this.CurrentValueField = value;
                    this.RaisePropertyChanged("CurrentValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Priority {
            get {
                return this.PriorityField;
            }
            set {
                if ((this.PriorityField.Equals(value) != true)) {
                    this.PriorityField = value;
                    this.RaisePropertyChanged("Priority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TagName {
            get {
                return this.TagNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TagNameField, value) != true)) {
                    this.TagNameField = value;
                    this.RaisePropertyChanged("TagName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TimeStamp {
            get {
                return this.TimeStampField;
            }
            set {
                if ((this.TimeStampField.Equals(value) != true)) {
                    this.TimeStampField = value;
                    this.RaisePropertyChanged("TimeStamp");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Value", Namespace="http://schemas.datacontract.org/2004/07/ScadaSystem")]
    [System.SerializableAttribute()]
    public partial class Value : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double InputValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TagIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeStampField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double InputValue {
            get {
                return this.InputValueField;
            }
            set {
                if ((this.InputValueField.Equals(value) != true)) {
                    this.InputValueField = value;
                    this.RaisePropertyChanged("InputValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TagId {
            get {
                return this.TagIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TagIdField, value) != true)) {
                    this.TagIdField = value;
                    this.RaisePropertyChanged("TagId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TimeStamp {
            get {
                return this.TimeStampField;
            }
            set {
                if ((this.TimeStampField.Equals(value) != true)) {
                    this.TimeStampField = value;
                    this.RaisePropertyChanged("TimeStamp");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ReportManagerServiceReference.IReportManager")]
    public interface IReportManager {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManager/Report1", ReplyAction="http://tempuri.org/IReportManager/Report1Response")]
        ReportManager.ReportManagerServiceReference.AlarmLog[] Report1(System.DateTime startTime, System.DateTime endTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManager/Report1", ReplyAction="http://tempuri.org/IReportManager/Report1Response")]
        System.Threading.Tasks.Task<ReportManager.ReportManagerServiceReference.AlarmLog[]> Report1Async(System.DateTime startTime, System.DateTime endTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManager/Report2", ReplyAction="http://tempuri.org/IReportManager/Report2Response")]
        ReportManager.ReportManagerServiceReference.AlarmLog[] Report2(int priority);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManager/Report2", ReplyAction="http://tempuri.org/IReportManager/Report2Response")]
        System.Threading.Tasks.Task<ReportManager.ReportManagerServiceReference.AlarmLog[]> Report2Async(int priority);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManager/Report3", ReplyAction="http://tempuri.org/IReportManager/Report3Response")]
        ReportManager.ReportManagerServiceReference.Value[] Report3(System.DateTime startTime, System.DateTime endTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManager/Report3", ReplyAction="http://tempuri.org/IReportManager/Report3Response")]
        System.Threading.Tasks.Task<ReportManager.ReportManagerServiceReference.Value[]> Report3Async(System.DateTime startTime, System.DateTime endTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManager/Report4", ReplyAction="http://tempuri.org/IReportManager/Report4Response")]
        ReportManager.ReportManagerServiceReference.Value[] Report4();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManager/Report4", ReplyAction="http://tempuri.org/IReportManager/Report4Response")]
        System.Threading.Tasks.Task<ReportManager.ReportManagerServiceReference.Value[]> Report4Async();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManager/Report5", ReplyAction="http://tempuri.org/IReportManager/Report5Response")]
        ReportManager.ReportManagerServiceReference.Value[] Report5();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManager/Report5", ReplyAction="http://tempuri.org/IReportManager/Report5Response")]
        System.Threading.Tasks.Task<ReportManager.ReportManagerServiceReference.Value[]> Report5Async();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManager/Report6", ReplyAction="http://tempuri.org/IReportManager/Report6Response")]
        ReportManager.ReportManagerServiceReference.Value[] Report6(string tagName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManager/Report6", ReplyAction="http://tempuri.org/IReportManager/Report6Response")]
        System.Threading.Tasks.Task<ReportManager.ReportManagerServiceReference.Value[]> Report6Async(string tagName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManager/GetTagNames", ReplyAction="http://tempuri.org/IReportManager/GetTagNamesResponse")]
        string[] GetTagNames();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManager/GetTagNames", ReplyAction="http://tempuri.org/IReportManager/GetTagNamesResponse")]
        System.Threading.Tasks.Task<string[]> GetTagNamesAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IReportManagerChannel : ReportManager.ReportManagerServiceReference.IReportManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReportManagerClient : System.ServiceModel.ClientBase<ReportManager.ReportManagerServiceReference.IReportManager>, ReportManager.ReportManagerServiceReference.IReportManager {
        
        public ReportManagerClient() {
        }
        
        public ReportManagerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ReportManagerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReportManagerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReportManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ReportManager.ReportManagerServiceReference.AlarmLog[] Report1(System.DateTime startTime, System.DateTime endTime) {
            return base.Channel.Report1(startTime, endTime);
        }
        
        public System.Threading.Tasks.Task<ReportManager.ReportManagerServiceReference.AlarmLog[]> Report1Async(System.DateTime startTime, System.DateTime endTime) {
            return base.Channel.Report1Async(startTime, endTime);
        }
        
        public ReportManager.ReportManagerServiceReference.AlarmLog[] Report2(int priority) {
            return base.Channel.Report2(priority);
        }
        
        public System.Threading.Tasks.Task<ReportManager.ReportManagerServiceReference.AlarmLog[]> Report2Async(int priority) {
            return base.Channel.Report2Async(priority);
        }
        
        public ReportManager.ReportManagerServiceReference.Value[] Report3(System.DateTime startTime, System.DateTime endTime) {
            return base.Channel.Report3(startTime, endTime);
        }
        
        public System.Threading.Tasks.Task<ReportManager.ReportManagerServiceReference.Value[]> Report3Async(System.DateTime startTime, System.DateTime endTime) {
            return base.Channel.Report3Async(startTime, endTime);
        }
        
        public ReportManager.ReportManagerServiceReference.Value[] Report4() {
            return base.Channel.Report4();
        }
        
        public System.Threading.Tasks.Task<ReportManager.ReportManagerServiceReference.Value[]> Report4Async() {
            return base.Channel.Report4Async();
        }
        
        public ReportManager.ReportManagerServiceReference.Value[] Report5() {
            return base.Channel.Report5();
        }
        
        public System.Threading.Tasks.Task<ReportManager.ReportManagerServiceReference.Value[]> Report5Async() {
            return base.Channel.Report5Async();
        }
        
        public ReportManager.ReportManagerServiceReference.Value[] Report6(string tagName) {
            return base.Channel.Report6(tagName);
        }
        
        public System.Threading.Tasks.Task<ReportManager.ReportManagerServiceReference.Value[]> Report6Async(string tagName) {
            return base.Channel.Report6Async(tagName);
        }
        
        public string[] GetTagNames() {
            return base.Channel.GetTagNames();
        }
        
        public System.Threading.Tasks.Task<string[]> GetTagNamesAsync() {
            return base.Channel.GetTagNamesAsync();
        }
    }
}
